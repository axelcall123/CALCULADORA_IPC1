/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadora;

import static calculadora.JVistaPrincipal.datos;
import static calculadora.JVistaPrincipal.fav;
import java.awt.Color;
import java.awt.Rectangle;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.Border;

/**
 *
 * @author axelc
 */
public class JSisEcua extends javax.swing.JFrame {
    JTemp temp = new JTemp();//ARREGLO DEL TAMAÑO DEL NUMERO
    JPanel jpanel = (JPanel) this.getContentPane();          
    JTextField[] text = new JTextField[temp.REG_tamañoo()*temp.REG_tamañoo()+temp.REG_tamañoo()];    //Declaración del array de cajas de texto
    public JTextField[] ResultadoS= new JTextField[temp.REG_tamañoo()];//CUADRAO DE LOS RESULTADOS
    public double[][] matriz= new double[temp.REG_tamañoo()][temp.REG_tamañoo()+1];//PASAR A LA MATRIZ
    //private  double[] res= new double[temp.REG_tamañoo()+1];
    //Border border = BorderFactory.createLineBorder(Color.black, 1);
    
    public JSisEcua() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("MATRIZ");
        int d = 0;//PARA BAJAR UNA CASILLA EN Y
        int id = 0;//ID DE LA CAJA PARA QUE SEA DIFERENTE
        for (int a = 0; a < temp.REG_tamañoo(); a++) {
            for (int i = 0 + id; i < temp.REG_tamañoo() + id+1; i++) {//CILCO PAR IMPRIMIR LA
                text[i] = new JTextField();    //LLAMOS EL ARRAY A LA CAJA DE TEXTO
                if(temp.REG_tamañoo()*(a+1)+a==i){//SI ES IGUAL A EL RESULTADO ENTONCES CORRE EL TEXT
                   text[i].setBounds(new Rectangle((i + 1 - id) * (35+50)/*POSICOIN X*/, 40 + d/*POSICOIN Y*/, 35, 20));
                    jpanel.add(text[i], null);
                }else{
                    text[i].setBounds(new Rectangle((i + 1 - id) * (35+40)/*POSICOIN X*/, 40 + d/*POSICOIN Y*/, 35, 20));
                    jpanel.add(text[i], null);
                }
            }
            id = id + temp.REG_tamañoo()+1;
            d = d + 30;
        }
        d=0;
        
        for(int a=0;a<temp.REG_tamañoo();a++){
            ResultadoS[a] = new JTextField();
            ResultadoS[a].setBounds(270,350+d,35,20);
            ResultadoS[a].setBackground(Color.yellow);
            d=d+30;
            jpanel.add(ResultadoS[a], null);
        }
        setSize(590, 510);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToggleButton2 = new javax.swing.JToggleButton();
        Bsave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jToggleButton2.setText("CALCULAR");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        Bsave.setText("GUARDAR");
        Bsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jToggleButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Bsave)
                .addContainerGap(306, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(353, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Bsave, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton2))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private int identificador=0;
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        NOSE ns = new NOSE();
        //double[][] MatVOl = new double[temp.REG_tamañoo()][temp.REG_tamañoo()];
        
        int kk = 0;//pasa a una matriz
        for (int a = 0; a < temp.REG_tamañoo(); a++) {//PASA LOS TEXFIELD A UNA MATRIZ
            for (int b = 0; b < temp.REG_tamañoo() + 1; b++) {
                JTextField texto = text[kk];//toma el texto de la matriz
                double mat = Double.parseDouble(texto.getText());
                matriz[a][b] = mat;//PASA EL TEXTO A UNA MATRIZ
                kk++;
            }
        }
        /*for (int convertir = 0; convertir < temp.REG_tamañoo() + 1; convertir++) {
            for (int a = 0; a < temp.REG_tamañoo(); a++) {//PASA LOS TEXFIELD A UNA MATRIZ
                for (int b = 0; b < temp.REG_tamañoo() + 1; b++) {
                    if (convertir == temp.REG_tamañoo()) {//IF LA POSICION ES IGUAL A LA ULTIMO TRAMO ES
                        if (b == convertir) {//SALTAR UNA COLUMNA
                            continue;
                        } else {
                            MatVOl[a][b] = matriz[a][b];
                        }

                    } else {
                        if (b == convertir) {//SALTAR UNA COLUMNA
                            continue;
                        } else {
                            if (b < convertir) {//SI ES MENOR A LA POSCION QUE SE QUIERE SALTAR ENTONCES 
                                MatVOl[a][b] = matriz[a][b];
                            } else {//SI ES MAYOR ENTONCES LE RESTAS UNA POSICION PARA QUE SEA N*N
                                MatVOl[a][b - 1] = matriz[a][b];
                            }
                        }
                    }
                }
            }//ANTES ENVEZ DE REST ES RES
            res[convertir]=ns.Matriz_2(MatVOl);//PASAR LOS RESULTADOS A UNA MATRIZ
        }*/
        double rest[]=ns.matriz(matriz,temp.REG_tamañoo(),temp.REG_tamañoo(),temp.REG_tamañoo()+1,temp.REG_tamañoo()+1);//MATRIZ NUEVA
        if (temp.REG_tamañoo() % 2 == 0) {
            for (int a = 0; a < temp.REG_tamañoo(); a++) {
                if (a % 2 == 0) {
                    /*-*/
                    ResultadoS[a].setText(ns.decimales(-1 * rest[a] / rest[temp.REG_tamañoo()]));
                } else {
                    /*+*/
                    ResultadoS[a].setText(ns.decimales(1 * rest[a] / rest[temp.REG_tamañoo()]));
                }
            }
        }else {
            for (int a = 0; a < temp.REG_tamañoo(); a++) {
                if (a % 2 == 0) {
                    /* +*/
                    ResultadoS[a].setText(ns.decimales(1 * rest[a] / rest[temp.REG_tamañoo()]));
                } else {
                    /*-*/
                    ResultadoS[a].setText(ns.decimales(-1 * rest[a] / rest[temp.REG_tamañoo()]));
                }
            }
        }
        String resultado="";
        Calendar fecha = new GregorianCalendar();
        /**//**/
        for (int a = 0; a < temp.REG_tamañoo(); a++) {
            String apoyo=ResultadoS[a].getText();
            resultado=resultado+";"+apoyo;
        }
        
        //String resultado=this.x1R.getText()+ " ; "+this.x2R.getText();
        //OPERACION
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int mes = fecha.get(Calendar.MONTH);
        int hora = fecha.get(Calendar.HOUR_OF_DAY);
        int minuto = fecha.get(Calendar.MINUTE);
        //IDENTIFICADOR
        if (identificador < datos.length) {
            if (datos[identificador] == null) {
                datos[identificador] = new ParaAlmacen(resultado, "siteama de ecuaciones", dia, mes, hora, minuto,temp.REG_tamañoo(),0);
                identificador++;
            } else {
                for (int a = identificador; a < datos.length; a++) {//4 TAMÑAO ACTUAL
                    if (datos[a] == null) {
                        datos[a] = new ParaAlmacen(resultado, "siteama de ecuaciones", dia, mes, hora, minuto,temp.REG_tamañoo(),0);
                        //identificador = a;
                        break;
                    } else {
                        contador=fav.length+10;
                    }
                }

            }
        }else{
            for(int z=1;z<datos.length;z++){
                datos[z-1]=datos[z];
            }datos[datos.length-1]=new ParaAlmacen(resultado,"siteama de ecuaciones",dia,mes,hora,minuto,temp.REG_tamañoo(),0);
   
        }
        
    }//GEN-LAST:event_jToggleButton2ActionPerformed
    
    private int contador=temp.Reg_FAV();
    private int SDE=temp.REG_SDE();
    private void BsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsaveActionPerformed
        Calendar fecha = new GregorianCalendar();
        /**//**/
        String resultado="";
        for (int a = 0; a < temp.REG_tamañoo(); a++) {
            String apoyo=ResultadoS[a].getText();
            resultado=resultado+";"+apoyo;
        }
        //OPERACION
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int mes = fecha.get(Calendar.MONTH);
        int hora = fecha.get(Calendar.HOUR_OF_DAY);
        int minuto = fecha.get(Calendar.MINUTE);
        //IDENTIFICADOR
        SDE++;
        temp.IN_SDE(SDE);
        System.out.println(temp.REG_SDE());
        
        if(contador<fav.length){
            if(fav[contador]==null){
                fav[contador]=new ParaAlmacen(resultado,"siteama de ecuaciones",dia,mes,hora,minuto,temp.REG_tamañoo(),temp.REG_SDE());
                contador++;
                System.out.println(contador);
            }else{
                for(int z=contador;z<fav.length;z++){//4 TAMÑAO ACTUAL
                    if(fav[z]==null){
                        fav[z]=new ParaAlmacen(resultado,"siteama de ecuaciones",dia,mes,hora,minuto,temp.REG_tamañoo(),temp.REG_SDE());
                        //contador=z;
                        System.out.println(contador);
                        break;
                    }else{

                    }
                }

            }
        }else{
            for(int z=1;z<fav.length;z++){
                fav[z-1]=fav[z];
            }fav[fav.length-1]=new ParaAlmacen(resultado,"siteama de ecuaciones",dia,mes,hora,minuto,temp.REG_tamañoo(),temp.REG_SDE());
        }System.out.println(contador);

        if(contador==fav.length-1){
            temp.In_FAV(fav.length);
        }

    }//GEN-LAST:event_BsaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JSisEcua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JSisEcua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JSisEcua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JSisEcua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JSisEcua().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bsave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
